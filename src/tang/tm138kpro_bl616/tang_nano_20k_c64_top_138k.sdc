create_clock -name clk -period 20 -waveform {0 10} [get_ports {clk}]
create_clock -name clk_pixel_x5_pal -period 6.349 -waveform {0 3.174} [get_nets {clk_pixel_x5_pal}]
create_generated_clock -name clk64_pal -source [get_nets {clk_pixel_x5_pal}] -master_clock clk_pixel_x5_pal -divide_by 5 -multiply_by 2 [get_nets {clk64_pal}]
create_generated_clock -name mspi_clk -source [get_nets {clk_pixel_x5_pal}] -master_clock clk_pixel_x5_pal -divide_by 5 -multiply_by 2 -phase 270 [get_nets {mspi_clk}]
create_clock -name clk_pixel_x5_ntsc -period 6.115 -waveform {0 3.05}[get_nets {clk_pixel_x5_ntsc}]
create_clock -name clk_pixel_x5 -period 6.349 -waveform {0 3.174} [get_nets {clk_pixel_x5}]
create_clock -name clk_audio -period 20833 -waveform {0 10000} [get_nets {video_inst/clk_audio}]
create_clock -name spi_clk -period 50 -waveform {0 25} [get_ports {spi_sclk}]
create_clock -name spi_sclk_d -period 20 -waveform {0 10} [get_nets {spi_sclk_d}]
create_clock -name ds_clk -period 500 -waveform {0 250} [get_nets {gamepad_p1/clk_spi}]
create_clock -name ds2_clk -period 500 -waveform {0 250} [get_nets {gamepad_p2/clk_spi}]
create_generated_clock -name clk64_ntsc -source [get_nets {clk_pixel_x5_ntsc}] -master_clock clk_pixel_x5_ntsc -divide_by 5 -multiply_by 2 [get_nets {clk64_ntsc}]
create_generated_clock -name clk64 -source [get_nets {clk_pixel_x5}] -divide_by 5 [get_nets {clk64}]
create_generated_clock -name clk32 -source [get_nets {clk64}] -divide_by 2 [get_nets {clk32}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {clk_pixel_x5_pal}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {clk_pixel_x5_ntsc}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {clk64_pal}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {clk64_ntsc}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {mspi_clk}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {clk_audio}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {spi_clk}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {spi_sclk_d}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {ds_clk}]
set_clock_groups -asynchronous -group [get_clocks {clk32}] -group [get_clocks {ds2_clk}]
set_clock_groups -asynchronous -group [get_clocks {clk64}] -group [get_clocks {clk64_pal}]
set_clock_groups -asynchronous -group [get_clocks {clk64}] -group [get_clocks {clk64_ntsc}]
report_timing -hold -from_clock [get_clocks {clk*}] -to_clock [get_clocks {clk*}] -max_paths 25 -max_common_paths 1
report_timing -setup -from_clock [get_clocks {clk*}] -to_clock [get_clocks {clk*}] -max_paths 25 -max_common_paths 1
